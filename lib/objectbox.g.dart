// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'src/core/local_storage/entities/progress.dart';
import 'src/core/local_storage/entities/quiz_answer.dart';
import 'src/core/local_storage/entities/word.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 2069696608890905500),
      name: 'Word',
      lastPropertyId: const obx_int.IdUid(6, 3459453445376806783),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5781965529891077484),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 356546348265225373),
            name: 'lessonId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1620624096525391906),
            name: 'word',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 192643686661211371),
            name: 'tick',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8417355950348051687),
            name: 'lessonCode',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 3459453445376806783),
            name: 'learned',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 418320531471006796),
      name: 'QuizAnswer',
      lastPropertyId: const obx_int.IdUid(6, 1392405091284887385),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3871430126256164252),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 3181877954679942894),
            name: 'lessonCode',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 3117485820371006279),
            name: 'answer',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8846363643023466759),
            name: 'number',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 1392405091284887385),
            name: 'isCorrect',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(11, 5133058624588134302),
      name: 'Progress',
      lastPropertyId: const obx_int.IdUid(7, 4664196003123145793),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3676323779197095866),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7413992339910006573),
            name: 'lessonCode',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2396337658467500522),
            name: 'conversation',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2468161847324425520),
            name: 'tutorial',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 720615162272074032),
            name: 'quiz',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 4573195102641223135),
            name: 'flash',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 4664196003123145793),
            name: 'lesson',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(11, 5133058624588134302),
      lastIndexId: const obx_int.IdUid(6, 534854537821461922),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [
        3693900768499163902,
        4041355875890450047,
        7501588875041595872,
        5105563513719027123,
        3669804085132930047,
        2614673775674687010,
        5352654921560407648,
        8257848940394270353
      ],
      retiredIndexUids: const [],
      retiredPropertyUids: const [
        6252977666425721850,
        5947781340679459564,
        93788672862678200,
        4753930208794654205,
        3894289884119682733,
        250220146425123238,
        5944542626050963957,
        4756016892560589855,
        9025861741559729483,
        8929773544089202173,
        6578245633539190893,
        8598967769940102588,
        2284266225620627125,
        869949655288216208,
        4440891761382174841,
        2544504751319920618,
        313036323911527938,
        2831301507615141975,
        4450048566735741547,
        5556174231874070501,
        6226540749147170502,
        2282507501234204039,
        5264153356936395193,
        6251448198344911900,
        5571913982366668056,
        4425848658891326291,
        7649640162655194765,
        9156780708301939869,
        166440905512217654,
        5696203272102257819,
        8255043908928795063,
        5346434355885454215,
        7153047116951598462,
        153050685688103605,
        3104438033192190224,
        8823010160676832030,
        3312284375083208978,
        1115041317776430778,
        6100487105924792127,
        3627447072664980882,
        3028278880642287907,
        6264625534070161971,
        8134106240062807130,
        2031661915960695135,
        732621730525350960,
        298052820249680056,
        2464371651611237479,
        4745200243686290071,
        8397491356839803152,
        8020725122909777195,
        7099676008125443617,
        1105786882986544944,
        3555788685439472057,
        2294899791790401588,
        4720825763686186498,
        1733963152475488018,
        3229908596601044935,
        3320590853814356698,
        1713924788525591237
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    Word: obx_int.EntityDefinition<Word>(
        model: _entities[0],
        toOneRelations: (Word object) => [],
        toManyRelations: (Word object) => {},
        getId: (Word object) => object.id,
        setId: (Word object, int id) {
          object.id = id;
        },
        objectToFB: (Word object, fb.Builder fbb) {
          final wordOffset =
              object.word == null ? null : fbb.writeString(object.word!);
          final lessonCodeOffset = object.lessonCode == null
              ? null
              : fbb.writeString(object.lessonCode!);
          fbb.startTable(7);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.lessonId);
          fbb.addOffset(2, wordOffset);
          fbb.addBool(3, object.tick);
          fbb.addOffset(4, lessonCodeOffset);
          fbb.addBool(5, object.learned);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final lessonIdParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 6);
          final tickParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 10, false);
          final learnedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 14, false);
          final wordParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final lessonCodeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 12);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final object = Word(
              lessonId: lessonIdParam,
              tick: tickParam,
              learned: learnedParam,
              word: wordParam,
              lessonCode: lessonCodeParam,
              id: idParam);

          return object;
        }),
    QuizAnswer: obx_int.EntityDefinition<QuizAnswer>(
        model: _entities[1],
        toOneRelations: (QuizAnswer object) => [],
        toManyRelations: (QuizAnswer object) => {},
        getId: (QuizAnswer object) => object.id,
        setId: (QuizAnswer object, int id) {
          object.id = id;
        },
        objectToFB: (QuizAnswer object, fb.Builder fbb) {
          final lessonCodeOffset = fbb.writeString(object.lessonCode);
          final answerOffset =
              object.answer == null ? null : fbb.writeString(object.answer!);
          fbb.startTable(7);
          fbb.addInt64(0, object.id);
          fbb.addOffset(2, lessonCodeOffset);
          fbb.addOffset(3, answerOffset);
          fbb.addInt64(4, object.number);
          fbb.addBool(5, object.isCorrect);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final isCorrectParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 14, false);
          final numberParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final answerParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final lessonCodeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final object = QuizAnswer(
              isCorrect: isCorrectParam,
              number: numberParam,
              answer: answerParam,
              lessonCode: lessonCodeParam,
              id: idParam);

          return object;
        }),
    Progress: obx_int.EntityDefinition<Progress>(
        model: _entities[2],
        toOneRelations: (Progress object) => [],
        toManyRelations: (Progress object) => {},
        getId: (Progress object) => object.id,
        setId: (Progress object, int id) {
          object.id = id;
        },
        objectToFB: (Progress object, fb.Builder fbb) {
          final lessonCodeOffset = object.lessonCode == null
              ? null
              : fbb.writeString(object.lessonCode!);
          fbb.startTable(8);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, lessonCodeOffset);
          fbb.addBool(2, object.conversation);
          fbb.addBool(3, object.tutorial);
          fbb.addBool(4, object.quiz);
          fbb.addBool(5, object.flash);
          fbb.addBool(6, object.lesson);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final lessonCodeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final conversationParam =
              const fb.BoolReader().vTableGetNullable(buffer, rootOffset, 8);
          final tutorialParam =
              const fb.BoolReader().vTableGetNullable(buffer, rootOffset, 10);
          final quizParam =
              const fb.BoolReader().vTableGetNullable(buffer, rootOffset, 12);
          final flashParam =
              const fb.BoolReader().vTableGetNullable(buffer, rootOffset, 14);
          final lessonParam =
              const fb.BoolReader().vTableGetNullable(buffer, rootOffset, 16);
          final object = Progress(
              id: idParam,
              lessonCode: lessonCodeParam,
              conversation: conversationParam,
              tutorial: tutorialParam,
              quiz: quizParam,
              flash: flashParam,
              lesson: lessonParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [Word] entity fields to define ObjectBox queries.
class Word_ {
  /// See [Word.id].
  static final id = obx.QueryIntegerProperty<Word>(_entities[0].properties[0]);

  /// See [Word.lessonId].
  static final lessonId =
      obx.QueryIntegerProperty<Word>(_entities[0].properties[1]);

  /// See [Word.word].
  static final word = obx.QueryStringProperty<Word>(_entities[0].properties[2]);

  /// See [Word.tick].
  static final tick =
      obx.QueryBooleanProperty<Word>(_entities[0].properties[3]);

  /// See [Word.lessonCode].
  static final lessonCode =
      obx.QueryStringProperty<Word>(_entities[0].properties[4]);

  /// See [Word.learned].
  static final learned =
      obx.QueryBooleanProperty<Word>(_entities[0].properties[5]);
}

/// [QuizAnswer] entity fields to define ObjectBox queries.
class QuizAnswer_ {
  /// See [QuizAnswer.id].
  static final id =
      obx.QueryIntegerProperty<QuizAnswer>(_entities[1].properties[0]);

  /// See [QuizAnswer.lessonCode].
  static final lessonCode =
      obx.QueryStringProperty<QuizAnswer>(_entities[1].properties[1]);

  /// See [QuizAnswer.answer].
  static final answer =
      obx.QueryStringProperty<QuizAnswer>(_entities[1].properties[2]);

  /// See [QuizAnswer.number].
  static final number =
      obx.QueryIntegerProperty<QuizAnswer>(_entities[1].properties[3]);

  /// See [QuizAnswer.isCorrect].
  static final isCorrect =
      obx.QueryBooleanProperty<QuizAnswer>(_entities[1].properties[4]);
}

/// [Progress] entity fields to define ObjectBox queries.
class Progress_ {
  /// See [Progress.id].
  static final id =
      obx.QueryIntegerProperty<Progress>(_entities[2].properties[0]);

  /// See [Progress.lessonCode].
  static final lessonCode =
      obx.QueryStringProperty<Progress>(_entities[2].properties[1]);

  /// See [Progress.conversation].
  static final conversation =
      obx.QueryBooleanProperty<Progress>(_entities[2].properties[2]);

  /// See [Progress.tutorial].
  static final tutorial =
      obx.QueryBooleanProperty<Progress>(_entities[2].properties[3]);

  /// See [Progress.quiz].
  static final quiz =
      obx.QueryBooleanProperty<Progress>(_entities[2].properties[4]);

  /// See [Progress.flash].
  static final flash =
      obx.QueryBooleanProperty<Progress>(_entities[2].properties[5]);

  /// See [Progress.lesson].
  static final lesson =
      obx.QueryBooleanProperty<Progress>(_entities[2].properties[6]);
}
